#!/usr/bin/env bash

set -e

# http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$SCRIPTDIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# shellcheck source=./esyConfig.sh
source "$SCRIPTDIR/esyConfig.sh"

callEsyCoreCommand() {
  "$OCAMLRUN_COMMAND" "$ESY_CORE_COMMAND" "$@"
}

callEsyJSCommand() {
	node "$SCRIPTDIR/esy.js" "$@"
}

if [ $# -eq 0 ]
then
  # TODO: run esy install && esy build here instead
  callEsyCoreCommand "--help"
elif [ $# -eq 1 ]; then
  case $1 in
    release)
      shift
      ensureSandbox
      callEsyJSCommand release
      ;;
    init)
      shift
      callEsyJSCommand init
      ;;
    build|b)
      callEsyCoreCommand "build"
      ;;
    build-shell)
      callEsyCoreCommand "build-shell"
      ;;
    build-plan)
      callEsyCoreCommand "build-plan"
      ;;
    build-package)
      callEsyCoreCommand "build-package"
      ;;
    ls-builds)
      callEsyCoreCommand "ls-builds"
      ;;
    ls-libs)
      echo >&2 "$1 command is temporarily disabled.";
      exit 1
      ;;
    ls-modules)
      echo >&2 "$1 command is temporarily disabled.";
      exit 1
      ;;
    import-opam)
      shift
      ensureSandbox
      callEsyJSCommand import-opam
      ;;
    shell)
      callEsyCoreCommand "shell"
      ;;
    command-env)
      callEsyCoreCommand "command-env"
      ;;
    sandbox-env)
      callEsyCoreCommand "sandbox-env"
      ;;
    build-env)
      callEsyCoreCommand "build-env"
      ;;
    config)
      shift
      callEsyJSCommand config
      ;;
    install|i)
      shift
      callEsyJSCommand install
      ;;
    add)
      shift
      callEsyJSCommand add "$@"
      callEsyCoreCommand "build"
      ;;
    install-cache)
      shift
      callEsyJSCommand install-cache
      ;;
    export-dependencies)
      shift
      callEsyCoreCommand "export-dependencies"
      ;;
    import-dependencies)
      shift
      callEsyJSCommand import-dependencies
      ;;
    export-build)
      shift
      exec "$SCRIPTDIR/esyExportBuild"
      ;;
    import-build)
      shift
      exec "$SCRIPTDIR/esyImportBuild"
      ;;
    x)
      callEsyCoreCommand "x"
      ;;
    version|--version|-v)
      callEsyCoreCommand "--version"
      ;;
    help|--help|-h)
      callEsyCoreCommand "--help"
      ;;
    -*)
      esyError "unknown option '$1'"
      exit 1
      ;;
    *)
      callEsyCoreCommand "--" "$@"
      ;;
  esac
else
  case $1 in
    import-opam)
      shift
      callEsyJSCommand import-opam "$@"
      ;;
    add)
      shift
      callEsyJSCommand add "$@"
      callEsyCoreCommand "build"
      ;;
    build-shell)
      shift
      callEsyCoreCommand "build-shell" "$@"
      ;;
    init)
      shift
      callEsyJSCommand init "$@"
      ;;
    build-plan)
      shift
      callEsyCoreCommand "build-plan" "$@"
      ;;
    build-package)
      shift
      callEsyCoreCommand "build-package" "$@"
      ;;
    install|i)
      shift
      callEsyJSCommand install "$@"
      ;;
    build|b)
      shift
      callEsyCoreCommand "build" -- "$@"
      ;;
    install-cache)
      shift
      callEsyJSCommand install-cache "$@"
      ;;
    release)
      shift
      callEsyJSCommand release "$@"
      ;;
    command-env)
      shift
      callEsyCoreCommand "command-env" "$@"
      ;;
    sandbox-env)
      shift
      callEsyCoreCommand "sandbox-env" "$@"
      ;;
    build-env)
      shift
      callEsyCoreCommand "build-env" "$@"
      ;;
    ls-builds)
      shift
      callEsyCoreCommand "ls-builds" "$@"
      ;;
    ls-libs)
      shift
      callEsyJSCommand ls-libs "$@"
      ;;
    ls-modules)
      shift
      callEsyJSCommand ls-modules "$@"
      ;;
    on-demand|export-dependencies)
      shift
      callEsyCoreCommand "export-dependencies" "$@"
      ;;
    import-dependencies)
      shift
      callEsyJSCommand import-dependencies "$@"
      ;;
    export-build)
      shift
      exec "$SCRIPTDIR/esyExportBuild" "$@"
      ;;
    import-build)
      shift
      exec "$SCRIPTDIR/esyImportBuild" "$@"
      ;;
    config)
      shift
      callEsyJSCommand config "$@"
      ;;
    x)
      shift
      callEsyCoreCommand "x" "--" "$@"
      ;;
    -*)
      echo Unknown option "$1" >&2
      exit 1
      ;;
    *)
      callEsyCoreCommand "--" "$@"
      ;;
  esac
fi

